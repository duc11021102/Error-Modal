{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\react-projects-master\\\\01-add-user\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NewUser from \"./components/NewUser/NewUser\";\nimport Users from \"./components/Users/Users\";\nimport { useState, useEffect } from \"react\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { database } from \"./firebase\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const dbRef = ref(getDatabase());\n  // get(child(dbRef, `users`)).then((snapshot) => {\n  //   if (snapshot.exists()) {\n  //     console.log(snapshot.val());\n  //     const data = snapshot.val();\n  //   } else {\n  //     console.log(\"No data available\");\n  //   }\n  // });\n\n  const [users, setUsers] = useState([]);\n  // useEffect(() => {\n\n  //   const dbRef = ref(getDatabase());\n\n  //   get(child(dbRef, `users`)).then((snapshot) => {\n  //     if (snapshot.exists()) {\n  //       console.log(snapshot.val());\n  //       const data = snapshot.val();\n  //       setUsers(data);\n  //     } else {\n  //       console.log(\"No data available\");\n  //     }\n  //   });\n\n  // }, []);\n\n  const onAddUserHandler = user => {\n    console.log(user);\n    setUsers(prevUsers => {\n      return [user, ...prevUsers];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewUser, {\n      onAddUser: onAddUserHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Users, {\n      item: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"gAXO2JN5F09+lSQAgkU4yvYNIT8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","NewUser","Users","useState","useEffect","getDatabase","ref","get","child","database","firebase","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","users","setUsers","onAddUserHandler","user","console","log","prevUsers","children","onAddUser","fileName","_jsxFileName","lineNumber","columnNumber","item","_c","$RefreshReg$"],"sources":["D:/ReactProject/react-projects-master/01-add-user/src/App.js"],"sourcesContent":["import React from \"react\";\nimport NewUser from \"./components/NewUser/NewUser\";\nimport Users from \"./components/Users/Users\";\nimport { useState, useEffect } from \"react\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { database } from \"./firebase\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/database\";\n\nfunction App() {\n  // const dbRef = ref(getDatabase());\n  // get(child(dbRef, `users`)).then((snapshot) => {\n  //   if (snapshot.exists()) {\n  //     console.log(snapshot.val());\n  //     const data = snapshot.val();\n  //   } else {\n  //     console.log(\"No data available\");\n  //   }\n  // });\n\n  const [users, setUsers] = useState([]);\n  // useEffect(() => {\n\n  //   const dbRef = ref(getDatabase());\n\n  //   get(child(dbRef, `users`)).then((snapshot) => {\n  //     if (snapshot.exists()) {\n  //       console.log(snapshot.val());\n  //       const data = snapshot.val();\n  //       setUsers(data);\n  //     } else {\n  //       console.log(\"No data available\");\n  //     }\n  //   });\n\n\n\n  // }, []);\n\n\n\n  const onAddUserHandler = (user) => {\n    console.log(user);\n    setUsers((prevUsers) => {\n      return [user, ...prevUsers];\n    });\n  };\n  return (\n    <>\n      <NewUser onAddUser={onAddUserHandler}></NewUser>\n      <Users item={users}></Users>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,mBAAmB;AAChE,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA;;EAIA,MAAMgB,gBAAgB,GAAIC,IAAI,IAAK;IACjCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBF,QAAQ,CAAEK,SAAS,IAAK;MACtB,OAAO,CAACH,IAAI,EAAE,GAAGG,SAAS,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;EACD,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA,CAACX,OAAO;MAACwB,SAAS,EAAEN;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW,eAChDjB,OAAA,CAACV,KAAK;MAAC4B,IAAI,EAAEb;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAC3B;AAEP;AAACb,EAAA,CA5CQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}