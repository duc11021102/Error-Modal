{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProject\\\\react-projects-master\\\\01-add-user\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NewUser from \"./components/NewUser/NewUser\";\nimport Users from \"./components/Users/Users\";\nimport { useState, useEffect } from \"react\";\nimport { getDatabase, ref, get, child } from \"firebase/database\";\nimport { database } from \"./firebase\";\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //   const dbRef = ref(getDatabase());\n  // get(child(dbRef, `users`)).then((snapshot) => {\n  //   if (snapshot.exists()) {\n  //     console.log(snapshot.val());\n  //     const data = snapshot.val();\n  //   } else {\n  //     console.log(\"No data available\");\n  //   }\n  // }).catch((error) => {\n  //   console.error(error);\n  // });\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    // Lấy tham chiếu đến node dữ liệu trong Firebase\n    const databaseRef = firebase.database().ref();\n\n    // Truy vấn dữ liệu từ Firebase\n    databaseRef.on('value', snapshot => {\n      // Lấy giá trị dữ liệu từ snapshot\n      const data = snapshot.val();\n      // Cập nhật state với dữ liệu mới nhất từ Firebase\n      setData(data);\n    });\n  }, []);\n  const onAddUserHandler = user => {\n    setUsers(prevUsers => {\n      return [user, ...prevUsers];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewUser, {\n      onAddUser: onAddUserHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Users, {\n      item: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","NewUser","Users","useState","useEffect","getDatabase","ref","get","child","database","firebase","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","users","setUsers","databaseRef","on","snapshot","data","val","setData","onAddUserHandler","user","prevUsers","children","onAddUser","fileName","_jsxFileName","lineNumber","columnNumber","item","_c","$RefreshReg$"],"sources":["D:/ReactProject/react-projects-master/01-add-user/src/App.js"],"sourcesContent":["import React from \"react\";\nimport NewUser from \"./components/NewUser/NewUser\";\nimport Users from \"./components/Users/Users\";\nimport { useState , useEffect } from \"react\";\nimport {getDatabase, ref, get, child} from \"firebase/database\";\nimport {database} from \"./firebase\"\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nfunction App() {\n\n//   const dbRef = ref(getDatabase());\n// get(child(dbRef, `users`)).then((snapshot) => {\n//   if (snapshot.exists()) {\n//     console.log(snapshot.val());\n//     const data = snapshot.val();\n//   } else {\n//     console.log(\"No data available\");\n//   }\n// }).catch((error) => {\n//   console.error(error);\n// });\nconst [users, setUsers] = useState([]);\n\nuseEffect(() => {\n  // Lấy tham chiếu đến node dữ liệu trong Firebase\n  const databaseRef = firebase.database().ref();\n\n  // Truy vấn dữ liệu từ Firebase\n  databaseRef.on('value', snapshot => {\n    // Lấy giá trị dữ liệu từ snapshot\n    const data = snapshot.val();\n    // Cập nhật state với dữ liệu mới nhất từ Firebase\n    setData(data);\n  });\n}, []);\n\n\n  const onAddUserHandler = (user) => {\n    setUsers((prevUsers) => {\n      return [user, ...prevUsers];\n    });\n  };\n  return (\n    <>\n      <NewUser onAddUser={onAddUserHandler}></NewUser>\n      <Users item={users}></Users>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SAASC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAC5C,SAAQC,WAAW,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAO,mBAAmB;AAC9D,SAAQC,QAAQ,QAAO,YAAY;AACnC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,WAAW,GAAGT,QAAQ,CAACD,QAAQ,EAAE,CAACH,GAAG,EAAE;;IAE7C;IACAa,WAAW,CAACC,EAAE,CAAC,OAAO,EAAEC,QAAQ,IAAI;MAClC;MACA,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,EAAE;MAC3B;MACAC,OAAO,CAACF,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGJ,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;IACjCR,QAAQ,CAAES,SAAS,IAAK;MACtB,OAAO,CAACD,IAAI,EAAE,GAAGC,SAAS,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;EACD,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA,CAACX,OAAO;MAAC4B,SAAS,EAAEJ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW,eAChDrB,OAAA,CAACV,KAAK;MAACgC,IAAI,EAAEjB;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBAC3B;AAEP;AAACjB,EAAA,CAxCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}